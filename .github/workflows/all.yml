name: All Branches CI

on:
  push:
    branches: [ "*" ] # sonar - main
  pull_request:
    branches: [ "*" ] # sonar - [opened, synchronize, reopened]

jobs:
  depcheck:
    runs-on: ubuntu-latest
    name: depCheck
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.

    - name: Build project with Maven
      run: mvn clean install -DskipTests

    - name: DepCheck
      uses: dependency-check/Dependency-Check_Action@main
      env:
        JAVA_HOME: /opt/jdk
      id: DepCheck
      with:
        # https://github.com/marketplace/actions/dependency-check
        # https://jeremylong.github.io/DependencyCheck/dependency-check-cli/arguments.html
        # artifactId
        project: 'Hotel-Reservation-Postgres'
        path: '.'
        format: 'HTML'
        out: 'reports'
        # others: ''

    - name: Upload DepCheck results
      uses: actions/upload-artifact@master
      with:
        name: 01 - Depcheck report
        path: ${{github.workspace}}/reports

  build:
    name: Build and verify application
    needs: depcheck
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu' # Alternative distribution options are available.
        # cache: maven

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze with SonarQube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify -Dtest='**/*UnitTests,**/*IntegrationTests' org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=cgctd-org_hotel-reservation-ces-2024-analyze

      # run: mvn verify -Dtest='**/*UnitTests,**/*IntegrationTests'
      # run: mvn verify -DincludedGroups="UnitTests,IntegrationTests" -DexcludedGroups=AcceptanceTests
      # run: echo "mvn verify"
      # run: echo "$GITHUB_BASE_REF"
      # run: echo "${{ github.base_ref }}"
      # run: env
    
    # TODO Saca el compilado solo si es main y hay un tag
    #- name: Upload compiled
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: compiled
    #    path: compiled.txt
    # - name: listado
    #  run: ls -la      
    
    - name: Upload Jacoco results
      uses: actions/upload-artifact@master
      with:
        name: 02 - Jacoco report
        path: ./target/site/jacoco

    - name: Upload Unit and Integration tests results
      uses: actions/upload-artifact@master
      with:
        name: 03 - Unit and Integration tests report
        path: ./target/surefire-reports
    
  accept:
    name: Run Acceptance testing
    needs: build
    # https://docs.github.com/es/actions/learn-github-actions/contexts#github-context
    # github.base_ref = rama destino de la solicitud de incorporación de cambios
    # github.ref = rama o etiqueta que desencadenó la ejecución del flujo
    if: ${{ github.base_ref == 'main' || github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
    #- name: Download compiled
    #  uses: actions/download-artifact@v3
    #  with:
    #    name: compiled
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Acceptance testing
      run: mvn test -Dtest='**/*AcceptanceTests'
      # run: mvn test -DincludedGroups=AcceptanceTests -DexcludedGroups="UnitTests,IntegrationTests"
      # run: echo "mvn test"

    - name: Upload Acceptance tests results
      uses: actions/upload-artifact@master
      with:
        name: 04 - Acceptance tests report
        path: ./target/surefire-reports
        # path: ./target/site/cucumber-pretty.html 

  #publish:
  #  name: Publish artifact
  #  ...
  # TODO publica el compilado solo si es main y hay un tag
  # - name: Build with Maven
  #  run: mvn -B package --file pom.xml