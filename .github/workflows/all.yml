name: All Branches CI

on:
  push:
    branches: [ "*" ] # sonar - main
  pull_request:
    branches: [ "*" ] # sonar - [opened, synchronize, reopened]

jobs:
  # ---------------------------------------------------------------------
  depCheckJob:
    name: Run Dependency Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'
        cache: maven

    - name: Build project with Maven without running tests
      run: mvn clean install -DskipTests

    # https://github.com/marketplace/actions/dependency-check
    # https://jeremylong.github.io/DependencyCheck/dependency-check-cli/arguments.html
    - name: Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      id: DepCheck
      env:
        JAVA_HOME: /opt/jdk
      with:
        project: 'Hotel-Reservation-Postgres' # pom.xml > artifactId
        path: '.'
        format: 'HTML'
        out: 'reports'

    - name: Upload Dependency Check report
      uses: actions/upload-artifact@master
      with:
        name: 01 - Dependency Check report
        path: ${{github.workspace}}/reports

  # ---------------------------------------------------------------------
  buildAndVerifyJob:
    name: Build and verify application
    runs-on: ubuntu-latest
    needs: depCheckJob

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'
        cache: maven

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze with SonarQube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify -Dtest='**/*UnitTests,**/*IntegrationTests' org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=cgctd-org_hotel-reservation-ces-2024-analyze
    
    - name: Upload Jacoco report
      uses: actions/upload-artifact@master
      with:
        name: 02 - Jacoco report
        path: ./target/site/jacoco

    - name: Upload Unit and Integration tests report
      uses: actions/upload-artifact@master
      with:
        name: 03 - Unit and Integration tests report
        path: ./target/surefire-reports

  # ---------------------------------------------------------------------
  accept:
    name: Run Acceptance testing
    runs-on: ubuntu-latest
    needs: buildAndVerifyJob

    # https://docs.github.com/es/actions/learn-github-actions/contexts#github-context
    # github.base_ref = rama destino de la solicitud de incorporación de cambios
    # github.ref      = rama/etiqueta que desencadenó la ejecución del flujo
    if: ${{ github.base_ref == 'main' || github.ref == 'refs/heads/main' }}

    # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      pgservice:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ltnFnpp15qKzXF7UfCDH
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'
        cache: maven

    - name: Acceptance testing
      run: mvn clean package -Dtest='**/*AcceptanceTests'

    - name: Upload compiled
      run: |
        ls -la
        ls -la ./target

    - name: Upload Acceptance tests results
      uses: actions/upload-artifact@master
      with:
        name: 04 - Acceptance tests report
        path: ./target/surefire-reports

